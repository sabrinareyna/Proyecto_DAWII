USE BD_SHOPMI;

---------------------------------------
--  		    USUARIO			     --
---------------------------------------

-- INSERT
DELIMITER $$
CREATE PROCEDURE USP_INSERT_USER(
	IN NumeroDocumento CHAR(8),
	IN Apellido VARCHAR(50),
	IN Nombre VARCHAR(50),
	IN FechaNacimiento DATE,
	IN Sexo CHAR(1),
	IN Telefono CHAR(9),
	IN Correo VARCHAR(80),
	IN PasswordHash VARCHAR(100),
	IN Estado BIT,
	IN RolId INT,
	OUT NuevoId INT
)
BEGIN
	INSERT INTO USUARIO (
		NUMERODOCUMENTO, APEUSUARIO, NOMUSUARIO, FECNAC,
		SEXUSUARIO, TELUSUARIO, CORUSUARIO, CONUSUARIO,
		ESTUSUARIO, CODROL
	)
	VALUES (
		NumeroDocumento, Apellido, Nombre, FechaNacimiento,
		Sexo, Telefono, Correo, PasswordHash,
		Estado, RolId
	);
	SET NuevoId = LAST_INSERT_ID();
END$$
DELIMITER ;
-- SET @NuevoId = 0;
-- CALL USP_INSERT_USER('70558644', 'Reyna', 'Sabrina', '2003-02-02', 'M', '951565955', 'sabrina@gmail.com', 'Sabrinaix', 1, 1, @NuevoId);
-- SELECT @NuevoId AS NuevoUsuario;


---------------------------------------
--  		    CATEGORIA   	     --
---------------------------------------

-- SELECT
DELIMITER $$
CREATE PROCEDURE USP_SELECT_CATEGORIAS()
BEGIN
	SELECT 
		CA.CODCATEGORIA AS `Value`,
		CA.NOMCATEGORIA AS `Name`
	FROM CATEGORIA AS CA;
END$$
DELIMITER ;

-- GET ALL
DELIMITER $$
CREATE PROCEDURE USP_GET_CATEGORIA()
BEGIN
	SELECT 
		CA.CODCATEGORIA,
		CA.IMGCATEGORIA,
		CA.NOMCATEGORIA,
		CA.ESTCATEGORIA
	FROM CATEGORIA AS CA;
END$$
DELIMITER ;
-- CALL USP_GET_CATEGORIA();

-- GET BY ID
DELIMITER $$
CREATE PROCEDURE USP_GET_ID_CATEGORIA(IN CODCATEGORIA INT)
BEGIN
	SELECT 
		CA.CODCATEGORIA,
		CA.IMGCATEGORIA,
		CA.NOMCATEGORIA
	FROM CATEGORIA AS CA
	WHERE CA.CODCATEGORIA = CODCATEGORIA;
END$$
DELIMITER ;
-- CALL USP_GET_ID_CATEGORIA(2);

---------------------------------------
--  		   MARCA        	     --
--------------------------------------- 

-- SELECT
DELIMITER $$
CREATE PROCEDURE USP_SELECT_MARCAS()
BEGIN
	SELECT 
		MA.CODMARCA AS `Value`,
		MA.NOMBREMARCA AS `Name`
	FROM MARCA AS MA;
END$$
DELIMITER ;
-- CALL USP_SELECT_MARCAS();

-- GET ALL
DELIMITER $$
CREATE PROCEDURE USP_GET_MARCA()
BEGIN
	SELECT 
		MA.CODMARCA,
		MA.NOMBREMARCA,
		MA.ESTMARCA
	FROM MARCA AS MA;
END$$
DELIMITER ;
-- CALL USP_GET_MARCA();

-- GET BY ID
DELIMITER $$
CREATE PROCEDURE USP_GET_ID_MARCA(IN CODMARCA INT)
BEGIN
	SELECT 
		MA.CODMARCA,
		MA.NOMBREMARCA,
        MA.ESTMARCA
	FROM MARCA AS MA
	WHERE MA.CODMARCA = CODMARCA
	  AND MA.ESTMARCA = 1;
END$$
DELIMITER ;
-- CALL USP_GET_ID_MARCA(8);

---------------------------------------
--  		   PRODUCTO        	     --
---------------------------------------

--  GET ALL
DELIMITER $$
CREATE PROCEDURE USP_GET_PRODUCTO()
BEGIN
    SELECT
        PR.CODPRODUCTO,
        CA.NOMCATEGORIA,
        MA.NOMBREMARCA,
        PR.IMGPRODUCTO,
        PR.NOMPRODUCTO,
        PR.DESCRIPCION,
        PR.PREUNI,
        PR.STOCK,
        PR.ESTPRODUCTO
    FROM PRODUCTO AS PR
    INNER JOIN CATEGORIA CA ON PR.CODCATEGORIA = CA.CODCATEGORIA
    INNER JOIN MARCA MA ON PR.CODMARCA = MA.CODMARCA;
END$$
DELIMITER ;
-- GET BY CATEGORIA

DELIMITER $$
CREATE PROCEDURE USP_GET_PRODUCTO_POR_CATEGORIA(IN CodCategoria INT)
BEGIN
    SELECT 
        P.CODPRODUCTO,
        C.NOMCATEGORIA,
        P.IMGPRODUCTO,
        P.NOMPRODUCTO,
        P.DESCRIPCION,
        P.PREUNI,
        M.NOMBREMARCA,
        P.STOCK,
        P.ESTPRODUCTO
    FROM PRODUCTO P
    INNER JOIN CATEGORIA C ON P.CODCATEGORIA = C.CODCATEGORIA
    INNER JOIN MARCA M ON P.CODMARCA = M.CODMARCA
    WHERE P.CODCATEGORIA = CodCategoria;
END$$
DELIMITER ;
-- CALL USP_GET_PRODUCTO_POR_CATEGORIA(1);

-- GET TOP 5
DELIMITER $$
CREATE PROCEDURE USP_GET_TOP5_PRODUCTOS_MAS_BARATOS()
BEGIN
    SELECT
        P.CODPRODUCTO,
        C.NOMCATEGORIA,
        P.IMGPRODUCTO,
        P.NOMPRODUCTO,
        P.DESCRIPCION,
        P.PREUNI,
        M.NOMBREMARCA,
        P.STOCK,
        P.ESTPRODUCTO
    FROM PRODUCTO P
    INNER JOIN CATEGORIA C ON P.CODCATEGORIA = C.CODCATEGORIA
    INNER JOIN MARCA M ON P.CODMARCA = M.CODMARCA
    WHERE P.ESTPRODUCTO = 1
    ORDER BY P.PREUNI ASC
    LIMIT 5;
END$$
DELIMITER ;
-- CALL USP_GET_TOP5_PRODUCTOS_MAS_BARATOS();

-- GET BY PEDIDO
DELIMITER $$
CREATE PROCEDURE USP_GET_PRODUCTOS_POR_PEDIDO(IN CODPEDIDO INT)
BEGIN	
    SELECT
        P.IMGPRODUCTO,
        P.NOMPRODUCTO,
        D.PREUNI,
        D.CANTIDAD
    FROM DETALLEPEDIDO D
    INNER JOIN PRODUCTO P
        ON D.CODPRODUCTO = P.CODPRODUCTO 
    WHERE D.CODPEDIDO = CODPEDIDO;
END$$
DELIMITER ;
-- CALL USP_GET_PRODUCTOS_POR_PEDIDO(1);

-- GET BY ID
DELIMITER $$
CREATE PROCEDURE USP_GET_ID_PRODUCTO(IN CODPRODUCTO INT)
BEGIN
    SELECT
        PR.CODPRODUCTO,
        CA.NOMCATEGORIA,
        PR.IMGPRODUCTO,
        PR.NOMPRODUCTO,
        PR.DESCRIPCION,
        PR.PREUNI,
        MA.NOMBREMARCA,
        PR.STOCK,
        PR.ESTPRODUCTO
    FROM PRODUCTO AS PR
    INNER JOIN CATEGORIA CA ON PR.CODCATEGORIA = CA.CODCATEGORIA
    INNER JOIN MARCA MA ON PR.CODMARCA = MA.CODMARCA
    WHERE PR.CODPRODUCTO = CODPRODUCTO;
END$$
DELIMITER ;
-- CALL USP_GET_ID_PRODUCTO(3);

-- MERGE
DELIMITER $$
CREATE PROCEDURE USP_MERGE_PRODUCTO(
    IN CODPRODUCTO INT,
    IN CODCATEGORIA INT,
    IN IMGPRODUCTO VARCHAR(50),
    IN NOMPRODUCTO VARCHAR(70),
    IN DESCRIPCION VARCHAR(300),
    IN PREUNI DECIMAL(10,2),
    IN CODMARCA INT,
    IN STOCK INT,
    IN ESTPRODUCTO BIT
)
BEGIN
    INSERT INTO PRODUCTO (
        CODPRODUCTO, CODCATEGORIA, IMGPRODUCTO, NOMPRODUCTO, DESCRIPCION, PREUNI,
        CODMARCA, STOCK, ESTPRODUCTO
    ) VALUES (
        CODPRODUCTO, CODCATEGORIA, IMGPRODUCTO, NOMPRODUCTO, DESCRIPCION, PREUNI,
        CODMARCA, STOCK, ESTPRODUCTO
    )
    ON DUPLICATE KEY UPDATE
        CODCATEGORIA = VALUES(CODCATEGORIA),
        IMGPRODUCTO = VALUES(IMGPRODUCTO),
        NOMPRODUCTO = VALUES(NOMPRODUCTO),
        DESCRIPCION = VALUES(DESCRIPCION),
        PREUNI = VALUES(PREUNI),
        CODMARCA = VALUES(CODMARCA),
        STOCK = VALUES(STOCK),
        ESTPRODUCTO = VALUES(ESTPRODUCTO);
END$$
DELIMITER ;

-- DELETE
DELIMITER $$
CREATE PROCEDURE USP_DELETE_PRODUCTO(IN p_CODPRODUCTO INT)
BEGIN
    UPDATE PRODUCTO
    SET ESTPRODUCTO = 0
    WHERE CODPRODUCTO = p_CODPRODUCTO;
END$$
DELIMITER ;

-- ENABLE 
DELIMITER $$
CREATE PROCEDURE USP_ENABLE_PRODUCTO(IN p_CODPRODUCTO INT)
BEGIN
    UPDATE PRODUCTO
    SET ESTPRODUCTO = 1
    WHERE CODPRODUCTO = p_CODPRODUCTO;
END$$
DELIMITER ;
---------------------------------------
-- 		   ESTADO_PEDIDO   	         --
---------------------------------------
DELIMITER $$
 CREATE PROCEDURE USP_SELECT_ESTADOS()
 BEGIN
	 SELECT 
		 E.CODESTADO AS `Value`,
		 E.NOMESTADO AS `Name`
	FROM ESTADO_PEDIDO E;
 END$$
DELIMITER ;
---------------------------------------
-- 		       PEDIDO   	         --
---------------------------------------
/*
PROCEDIMIENTOS DE PEDIDOS
*/

DELIMITER $$
-- SP LISTAR PEDIDO
DROP PROCEDURE IF EXISTS USP_GET_PEDIDO;
CREATE PROCEDURE USP_GET_PEDIDO()
BEGIN
	SELECT
		P.CODPEDIDO,
		P.FECPED,
		CONCAT(U.NOMUSUARIO, ' ', U.APEUSUARIO) AS CLIENTE,
		P.PRECIOTOTAL,
		E.NOMESTADO,
        P.ESTPED AS estPed,
		SUM(D.CANTIDAD) AS CANTIDADTOTAL
	FROM PEDIDO P
	INNER JOIN USUARIO U ON P.CODUSUARIO = U.CODUSUARIO
	INNER JOIN ESTADO_PEDIDO E ON E.CODESTADO = P.CODESTADO
	INNER JOIN DETALLEPEDIDO D ON P.CODPEDIDO = D.CODPEDIDO
	GROUP BY 
		P.CODPEDIDO, 
		P.FECPED, 
		U.NOMUSUARIO, 
		U.APEUSUARIO, 
		P.PRECIOTOTAL, 
		E.NOMESTADO,
        P.ESTPED
	ORDER BY 
		ABS(DATEDIFF(P.FECPED, NOW())) ASC, 
		P.PRECIOTOTAL DESC;
END$$
DELIMITER ;


-- SP GUARDA CAB+DETALLE
DELIMITER $$

CREATE  PROCEDURE USP_INSERT_PEDIDODETALLE(
    IN p_CODUSUARIO INT,
    IN p_FECPED DATE,
    IN p_PRECIOTOTAL DECIMAL(10,2),
    IN p_CODESTADO INT,
    IN p_ESTPED TINYINT(1),
    IN p_DETALLE JSON
)
BEGIN
    DECLARE CODPEDIDO INT;

    -- Manejo de errores seguro
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        ROLLBACK;
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Error al insertar pedido';
    END;

    START TRANSACTION;

    -- Insertar cabecera del pedido
    INSERT INTO PEDIDO (CODUSUARIO, FECPED, PRECIOTOTAL, CODESTADO, ESTPED)
    VALUES (p_CODUSUARIO, p_FECPED, p_PRECIOTOTAL, p_CODESTADO, p_ESTPED);

    -- Obtener ID generado
    SET CODPEDIDO = LAST_INSERT_ID();

    -- Insertar detalle desde JSON si no está vacío
    IF JSON_LENGTH(p_DETALLE) > 0 THEN
        INSERT INTO DETALLEPEDIDO (CODPEDIDO, CODPRODUCTO, PREUNI, CANTIDAD)
        SELECT 
            CODPEDIDO,
            d.CODPRODUCTO,
            d.PREUNI,
            d.CANTIDAD
        FROM JSON_TABLE(
            p_DETALLE,
            '$[*]' COLUMNS (
                CODPRODUCTO INT PATH '$.CODPRODUCTO',
                PREUNI DECIMAL(10,2) PATH '$.PREUNI',
                CANTIDAD INT PATH '$.CANTIDAD'
            )
        ) AS d;
    END IF;

    COMMIT;
END$$

DELIMITER ;
-- SP ACTUALIZAR EL ESTADO PEDIDO
DELIMITER $$

CREATE PROCEDURE `USP_UPDATE_PEDIDO`(
	IN p_CODPEDIDO INT,
	IN p_CODESTADO INT
)
BEGIN
	UPDATE PEDIDO
	SET CODESTADO = p_CODESTADO,
		ESTPED = 1
	WHERE CODPEDIDO = p_CODPEDIDO;
END$$

DELIMITER ;
DELIMITER $$
CREATE PROCEDURE USP_GET_ONE_PEDIDO(IN CODPEDIDO INT)
BEGIN
	SELECT
		A.CODPEDIDO,
		CONCAT(U.NOMUSUARIO, ' ', U.APEUSUARIO) AS CLIENTE,
		A.FECPED,
		A.PRECIOTOTAL,
		A.CODESTADO,
		A.ESTPED
	FROM PEDIDO A
	INNER JOIN USUARIO U ON A.CODUSUARIO = U.CODUSUARIO
	WHERE A.CODPEDIDO = CODPEDIDO
	ORDER BY A.FECPED DESC;
END$$
DELIMITER ;
-- PROC PARA ELIMINAR EL PEDIDO
DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `USP_DELETE_PEDIDO`(IN CODPEDIDO INT)
BEGIN
	UPDATE PEDIDO
	SET CODESTADO = 5,
		ESTPED = 0
	WHERE CODPEDIDO = CODPEDIDO;
END

DELIMITER ;



SELECT  *FROM PEDIDO;
update PEDIDO set ESTPED = 1 WHERE CODPEDIDO = 1;
SELECT  *FROM detallepedido;
SELECT * FROM producto;


TRUNCATE TABLE detallepedido;
DELETE FROM pedido WHERE CODPEDIDO > 0;


